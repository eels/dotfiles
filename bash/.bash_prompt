#!/bin/bash

# ----------------------------------------
#   Author: Liam Howell
#   Description: Bash prompt-only configurations
#
#   1. VARIABLES
#   2. UTILITIES
#   3. MODULES
#   4. EXPORTS
# ----------------------------------------

# ----------------------------------------
#   1. VARIABLES
# ----------------------------------------

## Name
NAME="liam"

## Colors
BLACK="\[\033[0;30m\]"
RED="\[\033[0;31m\]"
GREEN="\[\033[0;32m\]"
YELLOW="\[\033[0;33m\]"
BLUE="\[\033[0;34m\]"
WHITE="\[\033[0;37m\]"

## Icons
## https://onlineunicodetools.com/convert-unicode-to-hex
NODE="\xef\xa2\x98"
PHP="\xee\x98\x88"

# ----------------------------------------
#   2. UTILITIES
# ----------------------------------------

function upsearch() {
  local slashes
  local directory

  slashes=${PWD//[^\/]/}
  directory="$PWD"

  for (( n=${#slashes}; n>0; --n )); do
    for file in "$@"; do
      if compgen -G "$directory/$file" > /dev/null; then
        echo true && return
      fi
    done

    directory="$directory/.."
  done
}

# ----------------------------------------
#   3. MODULES
# ----------------------------------------

function __gitstatus() {
  git rev-parse --is-inside-work-tree &>/dev/null || return

  local symbol
  local branch

  symbol=''
  branch="$(git branch --show-current)"

  ## Check for changes that are uncommitted
  if ! eval git diff --quiet --ignore-submodules --cached; then
    symbol+='+'
  fi

  ## Check for changes that are unstaged
  if ! eval git diff-files --quiet --ignore-submodules --; then
    symbol+='!'
  fi

  ## Check for changes that are untracked
  if [ -n "$(git ls-files --others --exclude-standard)" ]; then
    symbol+='?'
  fi

  ## Wrap symbol in square brackets if it isn't empty
  if [ -n "${symbol}" ]; then
    symbol="[${symbol}]"
  fi

  echo -e "${1}on ${2}${branch} ${3}${symbol} "
}

function __nodeversion() {
  ! [ -x "$(command -v node)" ] && return

  if [[ $(upsearch "package.json" "*.js" "*.ts" "*.jsx" "*.tsx") ]]; then
    echo -e "${1}with ${2}${NODE} $(node --version) "
  fi
}

function __phpversion() {
  ! [ -x "$(command -v php)" ] && return

  if [[ $(upsearch "composer.json" ".php-version" "*.php") ]]; then
    echo -e "${1}with ${2}${PHP} v$(php -v | grep ^PHP | cut -d' ' -f2) "
  fi
}

# ----------------------------------------
#   4. EXPORTS
# ----------------------------------------

## Set default prompt
export PS1=""\
"\[\033]0;\w\007\]${GREEN}${NAME} ${WHITE}in ${YELLOW}\w "\
"\$(__gitstatus \"${WHITE}\" \"${RED}\" \"${BLUE}\")"\
"\$(__nodeversion \"${WHITE}\" \"${GREEN}\")"\
"\$(__phpversion \"${WHITE}\" \"${GREEN}\")"\
"\n${WHITE}$ ${BLACK}"

## Set continuation prompt
export PS2="${WHITE}âžœ ${BLACK}"
