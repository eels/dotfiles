#!/bin/bash

# -----------------------------------------------
#   Author: Liam Howell
#   Description: ZSH git configurations
#
#   1. INTERCEPTOR
#   2. FUNCTIONS
# -----------------------------------------------

# -----------------------------------------------
#   1. INTERCEPTOR
# -----------------------------------------------

function __git() {
  GIT_OPTIONAL_LOCKS=0 command /opt/homebrew/bin/git "$@"
}

function __gitinterceptor() {
  if [ $# -eq 0 ] || ! __git config --list | grep -q "^alias\\.override-$1"; then
    __git "$@"
  else
    __git "override-$1" "${@:2}"
  fi
}

alias git="__gitinterceptor"

# -----------------------------------------------
#   2. FUNCTIONS
# -----------------------------------------------

## Override functionality for `git branch`
function __gitbranch() {
  if [ $# -eq 0 ]; then
    __git branch --sort=-committerdate --format='%(HEAD) %(color:yellow)%(refname:short)%(color:reset) - %(contents:subject) %(color:green)(%(committerdate:relative)) [%(authorname)]'
  else
    __git branch "$@"
  fi
}

## Override functionality for `git checkout`
function __gitcheckout() {
  if [ $# -eq 0 ]; then
    __git checkout
  else
    __git checkout -b "$1" 2> /dev/null || __git checkout "$1"
  fi
}

## Quickly delete current branch and return to default branch
function __gitdone() {
  local defaultbranch
  local currentbranch

  defaultbranch=$(git branch -rl '*/HEAD' | grep -o '[^/]\+$')
  currentbranch=$(git rev-parse --abbrev-ref HEAD)

  git checkout "$defaultbranch"
  git delete "$currentbranch"
}

## Override functionality for `git push`
function __gitpush() {
  if [ $# -eq 0 ]; then
    __git push --set-upstream origin "$(__git symbolic-ref --short HEAD)"
  else
    __git push "$@"
  fi
}
